    贪心算法（又称贪婪算法）是指，在对问题求解时，总是做出在当前看来是最好的选择。也就是说，不从整体最优上加以考虑，他所做出的仅是在某种意义上的局部最优解。贪心算法不是对所有问题都能得到整体最优解，但对范围相当广泛的许多问题他能产生整体最优解或者是整体最优解的近似解。

    用贪心算法求解的问题一般具有2个重要的性质：贪心选择性质(Greedy-choice Property)和最优子结构性质(Optimal substructure)。
 贪心选择性质：指所求问题的整体最优解可以通过一系列局部最优的选择(即贪心选择)来求解出。这是贪心算法与动态规划算法的主要区别。
 动态规划算法通常以自底向上的方式解各子问题，而贪心算法则通常以自顶向下的方式进行，以迭代的方式作出相继的贪心选择，每作一次贪心选择就将所求问题简化为规模更小的子问题。
 贪心选择性质的证明：即要证明每一步所作的贪心选择最终导致问题的整体最优解。
 最优子结构性质：问题的最优子结构性质是该问题可用动态规划算法或贪心算法求解的关键特征。